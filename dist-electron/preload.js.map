{"version":3,"file":"preload.js","sources":["../electron/preload.ts"],"sourcesContent":["/// <reference types=\"electron\" />\nimport { contextBridge, ipcRenderer } from 'electron';\n\n// --------- Expose some API to the Renderer process ---------\ncontextBridge.exposeInMainWorld('electronAPI', {\n  ping: () => ipcRenderer.invoke('ping'),\n  // Invoke methods\n  invoke: (channel: string, ...args: any[]) => {\n    return ipcRenderer.invoke(channel, ...args);\n  },\n  // Send methods\n  send: (channel: string, ...args: any[]) => {\n    ipcRenderer.send(channel, ...args);\n  },\n  // Receive methods\n  on: (channel: string, callback: (...args: any[]) => void) => {\n    ipcRenderer.on(channel, (_event, ...args) => callback(...args));\n  },\n  // Remove listener\n  removeAllListeners: (channel: string) => {\n    ipcRenderer.removeAllListeners(channel);\n  },\n});\n"],"names":[],"mappings":";AAIA,cAAc,kBAAkB,eAAe;AAAA,EAC7C,MAAM,MAAM,YAAY,OAAO,MAAM;AAAA;AAAA,EAErC,QAAQ,CAAC,YAAoB,SAAgB;AAC3C,WAAO,YAAY,OAAO,SAAS,GAAG,IAAI;AAAA,EAC5C;AAAA;AAAA,EAEA,MAAM,CAAC,YAAoB,SAAgB;AAC7B,gBAAA,KAAK,SAAS,GAAG,IAAI;AAAA,EACnC;AAAA;AAAA,EAEA,IAAI,CAAC,SAAiB,aAAuC;AAC/C,gBAAA,GAAG,SAAS,CAAC,WAAW,SAAS,SAAS,GAAG,IAAI,CAAC;AAAA,EAChE;AAAA;AAAA,EAEA,oBAAoB,CAAC,YAAoB;AACvC,gBAAY,mBAAmB,OAAO;AAAA,EAAA;AAE1C,CAAC;"}